version: '3.7'
services:
  # dashboard:
  #   container_name: dashboard
  #   build:
  #     context: ../dashboard
  #     dockerfile: ../dashboard/Dockerfile
  #   volumes:
  #     - ../dashboard:/app
  #   command: 'npm start -- --host 0.0.0.0'
  #   ports:
  #     - 4200:4200
  #   depends_on:
  #     - backend
  #   networks:
  #     - app

  backend:
    container_name: admin_api
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      DB_HOST: db
      DB_DATABASE: admin
      DB_USERNAME: root
      DB_PASSWORD: root
      REDIS_HOST: redis
    ports:
      - 8000:8000
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
    networks:
      - app

  db:
    container_name: admin_db
    image: mysql:5.7.22
    restart: always
    environment:
      MYSQL_DATABASE: admin
      MYSQL_USER: root
      MYSQL_PASSWORD: root
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - .dbdata:/var/lib/mysql
    ports:
      - 33066:3306
    networks:
      - app

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: pma_a
    links:
      - db:db
    environment:
      PMA_HOST: db
      PMA_PORT: 33066
      PMA_ARBITRARY: 1
      MYSQL_USER: root
      MYSQL_PASSWORD: root
      MYSQL_ROOT_PASSWORD: root
    restart: always
    ports:
      - 8081:80
    networks:
      - app
  
  redis:
    container_name: redis
    image: redis:latest
    ports:
      - 6379:6379
    networks:
      - app
  
  mailcatcher:
    container_name: mailcatcher
    restart: on-failure
    image: dockage/mailcatcher:0.9.0
    ports:
    - "1080:1080"
    - "1025:1025"
    networks:
      - app

networks:
  app: